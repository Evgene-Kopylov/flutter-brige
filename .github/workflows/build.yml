name: Build Manuspect App

on:
  push:
    branches:
      - build-2
  pull_request:
    branches:
      - build-2

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - run: dir ~/.
    - run: dir ${{ env.HOME }}

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.22.3

    - name: flutter pub get
      working-directory: my_app
      run: flutter pub get

    - run: dir C:\Users\runneradmin\AppData\Local\Pub\Cache
    - run: dir ~/.
    - run: dir ${{ env.HOME }}
    - run: dir .

    - name: Create database.g.dart
      working-directory: my_app
      run: dart run build_runner build

    # - name: Restore cached Rust and Flutter  dependencies
    #   id: cache-deps-restore
    #   uses: actions/cache/restore@v4
    #   with:
    #     path: |
    #       ~/.cargo/bin/
    #       ~/.cargo/registry
    #       ~/.cargo/git
    #       target/
    #       ~/.flutter
    #       ${{ env.HOME }}/.pub-cache
    #     key: ${{ runner.os }}-deps-${{ hashFiles('**/Cargo.lock', '**/pubspec.yaml') }}
    #     restore-keys: |
    #       ${{ runner.os }}-deps-

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install Flutter Rust Bridge Codegen
      run: cargo install flutter_rust_bridge_codegen


    # - name: Set up Flutter
    #   uses: subosito/flutter-action@v2
    #   with:
    #     channel: stable
    #     flutter-version: 3.22.3

    # - name: flutter pub get
    #   working-directory: my_app
    #   run: flutter pub get

    # - name: Create database.g.dart
    #   run: dart run build_runner build

    - run: dir ~/.
    - run: dir ${{ env.HOME }}
    

    - name: Bridge generate
      working-directory: my_app
      run: flutter_rust_bridge_codegen generate

    - run: dir ~/.
    - run: dir ${{ env.HOME }}

    - name: Build the Flutter app
      run: flutter build windows --release
      working-directory: my_app

    - name: Save Rust and Flutter dependencies
      id: cache-deps-save
      uses: actions/cache/save@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry
          ~/.cargo/git
          target/
          ~/.flutter
          ${{ env.HOME }}/.pub-cache
        key: ${{ runner.os }}-deps-${{ hashFiles('**/Cargo.lock', '**/pubspec.yaml') }}


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false


    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build\windows\x64\runner\Release\manuspect_app.exe
        asset_name: my_app.exe
        asset_content_type: application/octet-stream